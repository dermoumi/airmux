# Check if there's already a session with the same name and create it if not
if-shell '! tmux list-session | grep test' {
    new-session -s test -d

    # Move existing window to the base index if it's different
    move-window -s test:^ -t test:999999

    set-environment -g __RMUX_FRESH_SESSION 1
}

# Set base window and pane indices
set -s -t test base-index 1
set -s -t test pane-base-index 1

# Create window 1 ( window1 ) if it does not exist
if-shell '! tmux list-windows -t test -F "##I" | grep -Fx 1' {
    # Create window and rename it
    new-window -d -t test:1
    rename-window -t test:1 window1

    # Pane 0
    run-shell -t 'test:1' 'tmux set-environment -t test -g __RMUX_PANE_0 "#D"'

    # Pane 1
    run-shell 'tmux split-window -h -c /home/ -t test:1'
    run-shell -t 'test:1' 'tmux set-environment -t test -g __RMUX_PANE_1 "#D"'

    # Pane 2
    run-shell 'tmux split-window -v -c / -l '\''25%'\'' -t '\''test:1.#{__RMUX_PANE_0}'\'''
    run-shell -t 'test:1' 'tmux set-environment -t test -g __RMUX_PANE_2 "#D"'
    run-shell 'tmux send-keys -t '\''test:1.#{__RMUX_PANE_2}'\'' '\''exec fish -C '\''\'\'''\''echo hello'\''\'\'''\'''\'' C-m'
    run-shell 'tmux send-keys -t '\''test:1.#{__RMUX_PANE_2}'\'' pwd C-m'
    run-shell 'tmux send-keys -t '\''test:1.#{__RMUX_PANE_2}'\'' C-l'
}

# Create window 2 ( - ) if it does not exist
if-shell '! tmux list-windows -t test -F "##I" | grep -Fx 2' {
    # Create window and rename it
    new-window -d -t test:2

    # Pane 0
    run-shell -t 'test:2' 'tmux set-environment -t test -g __RMUX_PANE_0 "#D"'
    run-shell 'tmux send-keys -t '\''test:2.#{__RMUX_PANE_0}'\'' '\''echo '\''\'\'''\''pane1'\''\'\'''\'''\'' C-m'

    # Pane 1
    run-shell 'tmux split-window -h -t test:2'
    run-shell -t 'test:2' 'tmux set-environment -t test -g __RMUX_PANE_1 "#D"'
    run-shell 'tmux send-keys -t '\''test:2.#{__RMUX_PANE_1}'\'' '\''echo '\''\'\'''\''pane2'\''\'\'''\'''\'' C-m'

    # Pane 2
    run-shell 'tmux split-window -h -t test:2'
    run-shell -t 'test:2' 'tmux set-environment -t test -g __RMUX_PANE_2 "#D"'
    run-shell 'tmux send-keys -t '\''test:2.#{__RMUX_PANE_2}'\'' '\''echo '\''\'\'''\''pane3'\''\'\'''\'''\'' C-m'

    # Pane 3
    run-shell 'tmux split-window -h -t test:2'
    run-shell -t 'test:2' 'tmux set-environment -t test -g __RMUX_PANE_3 "#D"'
    run-shell 'tmux send-keys -t '\''test:2.#{__RMUX_PANE_3}'\'' '\''echo '\''\'\'''\''pane4'\''\'\'''\'''\'' C-m'

    # Pane 4
    run-shell 'tmux split-window -h -t test:2'
    run-shell -t 'test:2' 'tmux set-environment -t test -g __RMUX_PANE_4 "#D"'
    run-shell 'tmux send-keys -t '\''test:2.#{__RMUX_PANE_4}'\'' '\''echo '\''\'\'''\''pane5'\''\'\'''\'''\'' C-m'
    select-layout -t test:2 main-vertical
}

# Create window 3 ( custom_window ) if it does not exist
if-shell '! tmux list-windows -t test -F "##I" | grep -Fx 3' {
    # Create window and rename it
    new-window -d -t test:3
    rename-window -t test:3 custom_window

    # Pane 0
    run-shell -t 'test:3' 'tmux set-environment -t test -g __RMUX_PANE_0 "#D"'
    run-shell 'tmux send-keys -t '\''test:3.#{__RMUX_PANE_0}'\'' '\''echo '\''\'\'''\''pane1'\''\'\'''\'''\'' C-m'

    # Pane 1
    run-shell 'tmux split-window -h -t test:3'
    run-shell -t 'test:3' 'tmux set-environment -t test -g __RMUX_PANE_1 "#D"'
    run-shell 'tmux send-keys -t '\''test:3.#{__RMUX_PANE_1}'\'' '\''echo '\''\'\'''\''pane2'\''\'\'''\'''\'' C-m'

    # Pane 2
    run-shell 'tmux split-window -h -t test:3'
    run-shell -t 'test:3' 'tmux set-environment -t test -g __RMUX_PANE_2 "#D"'
    run-shell 'tmux send-keys -t '\''test:3.#{__RMUX_PANE_2}'\'' '\''echo '\''\'\'''\''pane3'\''\'\'''\'''\'' C-m'

    # Pane 3
    run-shell 'tmux split-window -h -t test:3'
    run-shell -t 'test:3' 'tmux set-environment -t test -g __RMUX_PANE_3 "#D"'
    run-shell 'tmux send-keys -t '\''test:3.#{__RMUX_PANE_3}'\'' '\''echo '\''\'\'''\''pane4'\''\'\'''\'''\'' C-m'

    # Pane 4
    run-shell 'tmux split-window -h -t test:3'
    run-shell -t 'test:3' 'tmux set-environment -t test -g __RMUX_PANE_4 "#D"'
    run-shell 'tmux send-keys -t '\''test:3.#{__RMUX_PANE_4}'\'' '\''echo '\''\'\'''\''pane5'\''\'\'''\'''\'' C-m'
    select-layout -t test:3 'a72b,121x57,0,0[121x40,0,0{50x40,0,0,377,70x40,51,0[70x20,51,0,382,70x19,51,21,383]},121x16,0,41{79x16,0,41,378,41x16,80,41,380}]'
}

# Create window 4 ( window_of_panes ) if it does not exist
if-shell '! tmux list-windows -t test -F "##I" | grep -Fx 4' {
    # Create window and rename it
    new-window -d -t test:4
    rename-window -t test:4 window_of_panes

    # Pane 0
    run-shell -t 'test:4' 'tmux set-environment -t test -g __RMUX_PANE_0 "#D"'
    run-shell 'tmux send-keys -t '\''test:4.#{__RMUX_PANE_0}'\'' '\''echo '\''\'\'''\''Short Change Pane'\''\'\'''\'''\'' C-m'

    # Pane 1
    run-shell 'tmux split-window -h -t test:4'
    run-shell -t 'test:4' 'tmux set-environment -t test -g __RMUX_PANE_1 "#D"'

    # Pane 2
    run-shell 'tmux split-window -v -l 20 -t test:4'
    run-shell -t 'test:4' 'tmux set-environment -t test -g __RMUX_PANE_2 "#D"'

    # Pane 3
    run-shell 'tmux split-window -h -t test:4'
    run-shell -t 'test:4' 'tmux set-environment -t test -g __RMUX_PANE_3 "#D"'
    run-shell 'tmux send-keys -t '\''test:4.#{__RMUX_PANE_3}'\'' '\''echo '\''\'\'''\''Final Pane VIII Remake'\''\'\'''\'''\'' C-m'
}

# Create window 5 ( - ) if it does not exist
if-shell '! tmux list-windows -t test -F "##I" | grep -Fx 5' {
    # Create window and rename it
    new-window -d -t test:5

    # Pane 0
    run-shell -t 'test:5' 'tmux set-environment -t test -g __RMUX_PANE_0 "#D"'
    run-shell 'tmux send-keys -t '\''test:5.#{__RMUX_PANE_0}'\'' '\''echo henlo'\'' C-m'
}

# Create window 6 ( - ) if it does not exist
if-shell '! tmux list-windows -t test -F "##I" | grep -Fx 6' {
    # Create window and rename it
    new-window -d -t test:6

    # Pane 0
    run-shell -t 'test:6' 'tmux set-environment -t test -g __RMUX_PANE_0 "#D"'
}

# If the session was freshly created, remove the original window
if-shell -F '#{__RMUX_FRESH_SESSION}' {
    kill-window -t test:999999
    select-window -t test:^

    set-environment -gu __RMUX_FRESH_SESSION
}

